{"ast":null,"code":"var _jsxFileName = \"/Users/wangzining/Desktop/\\u7B14\\u8BB0\\u6E90\\u7801/react-exercise/react-exercise/todolist/src/components/Header/index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleKeyUp = event => {\n      //解构赋值获取keyCode,target\n      const {\n        keyCode,\n        target\n      } = event;\n      //判断是否是回车按键\n      if (keyCode !== 13) return;\n      //添加的todo名字不能为空\n      if (target.value.trim() === '') {\n        alert('输入不能为空');\n        return;\n      }\n      //准备好一个todo对象\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      //将todoObj传递给App\n      this.props.addTodo(todoObj);\n      //清空输入\n      target.value = '';\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handleKeyUp,\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  }\n}\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","nanoid","PropTypes","Header","handleKeyUp","event","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render","propTypes","func","isRequired"],"sources":["/Users/wangzining/Desktop/笔记源码/react-exercise/react-exercise/todolist/src/components/Header/index.jsx"],"sourcesContent":["import React, {Component} from 'react'\nimport './index.css'\nimport {nanoid} from 'nanoid'\nimport PropTypes from 'prop-types'\n\n\nexport default class Header extends Component{\n\t// 对接收的props进行：类型、必要性的限制\n\tstatic propTypes = {\n\t\taddTodo:PropTypes.func.isRequired\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t//键盘事件的回调\n\t\thandleKeyUp = (event)=>{\n\t\t\t//解构赋值获取keyCode,target\n\t\t\tconst {keyCode,target} = event\n\t\t\t//判断是否是回车按键\n\t\t\tif(keyCode !== 13) return\n\t\t\t//添加的todo名字不能为空\n\t\t\tif(target.value.trim() === ''){\n\t\t\t\talert('输入不能为空')\n\t\t\t\treturn\n\t\t\t}\n\t\t\t//准备好一个todo对象\n\t\t\tconst todoObj = {id:nanoid(),name:target.value,done:false}\n\t\t\t//将todoObj传递给App\n\t\t\tthis.props.addTodo(todoObj)\n\t\t\t//清空输入\n\t\t\ttarget.value = ''\n\t\t}\n\t\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"todo-header\">\n\t\t\t\t\t<input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n\t\n\t\n\t"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,aAAa;AACpB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAAA;AAGlC,eAAe,MAAMC,MAAM,SAASH,SAAS;EAAA;IAAA;IAAA,KAe3CI,WAAW,GAAIC,KAAK,IAAG;MACtB;MACA,MAAM;QAACC,OAAO;QAACC;MAAM,CAAC,GAAGF,KAAK;MAC9B;MACA,IAAGC,OAAO,KAAK,EAAE,EAAE;MACnB;MACA,IAAGC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAC;QAC7BC,KAAK,CAAC,QAAQ,CAAC;QACf;MACD;MACA;MACA,MAAMC,OAAO,GAAG;QAACC,EAAE,EAACX,MAAM,EAAE;QAACY,IAAI,EAACN,MAAM,CAACC,KAAK;QAACM,IAAI,EAAC;MAAK,CAAC;MAC1D;MACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC;MAC3B;MACAJ,MAAM,CAACC,KAAK,GAAG,EAAE;IAClB,CAAC;EAAA;EAEDS,MAAM,GAAG;IACR,oBACC;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC3B;QAAO,OAAO,EAAE,IAAI,CAACb,WAAY;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACzE;EAER;AACD;AAxCoBD,MAAM,CAEnBe,SAAS,GAAG;EAClBF,OAAO,EAACd,SAAS,CAACiB,IAAI,CAACC;AAGxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}